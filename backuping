#!/usr/bin/env php
<?php

/**
 * Backuping CLI
 *
 * @author      Raúl Salvador Andrade <rsalvador@wat.mx>
 * @copyright   2015 Raúl Salvador Andrade
 * @link        http://wat.mx
 * @license     http://wat.mx/license
 * @version     1.0.0
 * @package     Backuping
 *
 * MIT LICENSE
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

// Get first argv, name of script
array_shift( $argv );

require_once 'simple_html_dom_node.php';

if ( array_shift( $argv ) == '--site' ) {
  $dir = 'site';
  $site = array_shift( $argv );
  $file = pathinfo( $site );
  $html = file_get_html( $site );

  if ( !defined('BASE_URL')) {
    define('BASE_URL', $file['dirname']);
  }

  if (!file_exists($dir)) {
    mkdir($dir);
  }

  // Create file
  if ( !file_exists($dir . '/' . $file['filename'] . '.' . $file['extension']) ) {
    $contents = getFile($site);
    file_put_contents( $dir . '/' . $file['filename'] . '.' . $file['extension'], $contents );
  }
  echo message('Getting site: ' . $site, 'WARNING');

  // Get all head link resources
  echo message('Getting CSS resources', 'UNKNOWN');
  foreach ($html->find('link') as $e) {
    $file_ = $e->href;
    if ( !preg_match('/^(http|https|ftp|\/\/)/', $file_) ) {
      $pathinfo = pathinfo($file_);
      if ( !file_exists( $dir . '/' . $file_ ) ) {
        if ( !file_exists( $dir . '/' . $pathinfo['dirname'] ) ) {
          @mkdir($dir . '/' . $pathinfo['dirname'], 0744, true);
        }
        $contents = getFile($file['dirname'] . '/' . $file_);
        file_put_contents( $dir . '/' . $file_, $contents );
        echo message("\tGet file: " . $file_, 'SUCCESS');
        // Get css resources
        if ( $pathinfo['extension'] == 'css' ) {
          foreach (explode(';', $contents) as $r) {
            if ( strstr($r, 'url(') ) {
              foreach (explode('url', $r) as $u) {
                preg_match_all('/\(.*\)/', $u, $l);
                foreach ($l as $i) {
                  if ( count($i) > 0 ) {
                    $item = substr( $i[0], 0, strpos( $i[0], ')' ) + 1 );
                    preg_match_all('/\((\"|\')?(.*)(\"|\')?\)/', $item, $match);
                    $resourceName = preg_replace( ['/\'/', '/\"/'], '', $match[2][0] );
                    // If resource is font
                    if (strstr($resourceName, 'eot'))
                      $resourceName = substr( $resourceName, 0, strpos($resourceName, 'eot') + 3 );
                    elseif (strstr($resourceName, 'ttf'))
                      $resourceName = substr( $resourceName, 0, strpos($resourceName, 'ttf') + 3 );
                    elseif (strstr($resourceName, 'woff2'))
                      $resourceName = substr( $resourceName, 0, strpos($resourceName, 'woff2') + 5 );
                    elseif (strstr($resourceName, 'woff'))
                      $resourceName = substr( $resourceName, 0, strpos($resourceName, 'woff') + 4 );
                    elseif (strstr($resourceName, 'svg'))
                      $resourceName = substr( $resourceName, 0, strpos($resourceName, 'svg') + 3 );
                    $resourcePath = pathinfo($resourceName);
                    $url_ = $file['dirname'] . '/' . $pathinfo['dirname'] . '/' . $resourceName;
                    $file_out = $pathinfo['dirname'] . '/' . $resourceName;
                    $resourceDirectory = $pathinfo['dirname'] . '/' . $resourcePath['dirname'];
                    if ( !file_exists($dir . '/' . $file_out) ) {
                      // var_dump($dir . '/' . $file_out);
                      if ( !file_exists($resourceDirectory) )
                        @mkdir($dir . '/' . $resourceDirectory, 0744, true);

                      $rOuts = getFile($url_);
                      file_put_contents( $dir . '/' . $file_out, $rOuts );
                      echo message("\t\tGet file: " . $resourceName, 'PROMPT');

                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  // Get Scripts
  echo message('Getting JavaScript resources', 'UNKNOWN');
  foreach ($html->find('script') as $script) {
    if ($script->src) {
      // Get script if not cdn
      if ( !preg_match('/^(http|https|ftp|\/\/)/', $script->src) ) {
        $scriptPath = pathinfo( $script->src );
        if ( !file_exists($dir . '/' . $script->src) ) {
          if (!file_exists($scriptPath['dirname']))
            @mkdir($dir . '/' . $scriptPath['dirname'], 0744, true);
          $sOuts = getFile( $file['dirname'] . '/' . $script->src);
          file_put_contents( $dir . '/' . $script->src, $sOuts );
          echo message("\tGet file: " . $script->src, 'SUCCESS');
        }
      }
    }
  }

  // Get images
  echo message('Getting images', 'UNKNOWN');
  foreach ($html->find('img') as $image) {
    // Get script if not cdn
    if ( !preg_match('/^(http|https|ftp|\/\/)/', $image->src) ) {
      $imagePath = pathinfo( $image->src );
      if ( !file_exists($dir . '/' . $image->src) ) {
        if (!file_exists($imagePath['dirname']))
          @mkdir($dir . '/' . $imagePath['dirname'], 0744, true);
        $iOuts = getFile( $file['dirname'] . '/' . $image->src);
        file_put_contents( $dir . '/' . $image->src, $iOuts );
        echo message("\tGet file: " . $image->src, 'SUCCESS');
      }
    }
  }

  // Get entire site
  foreach ($html->find('a') as $a) {
    if (pathinfo($a->href)['extension'] == 'html') {
      if ( !file_exists( $dir . '/' . $a->href ) ) {
        echo message('Getting another route', 'ERROR');
        system('./backuping --site ' . $file['dirname'] . '/' . $a->href);
      }
    }
  }

}

function getFile($url) {
  $ch = curl_init();

  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

  $output = curl_exec($ch);

  curl_close($ch);
  return $output;
}

function message($message, $type) {
  $msgType = json_decode( json_encode( array(
    'SUCCESS'   => "\033[0;32m",
    'ERROR'     => "\033[1;31m",
    'WARNING'   => "\033[0;33m",
    'UNKNOWN'   => "\033[1;32m",
    'CONSOLE'   => "\033[0m",
    'PROMPT'    => "\033[1;34m",
    'OUT'       => "\033[0;37m"
  ) ) );
  return $msgType->$type . $message . $msgType->CONSOLE . "\n";
}
